#
# Created by Renatus Madrigal on 04/24/2025
#

import os
from pydantic import BaseModel, Field


class CleanTempFilesConfig(BaseModel):
    """
    Configuration for cleaning temporary files generated by LaTeX.
    """

    root_dir: str = Field(default=".", description="Root directory to clean")
    all_file: bool = Field(default=False, description="Delete all files including PDFs")

    def __init__(self, **kwargs):
        super().__init__(**kwargs)
        self.root_dir = os.path.abspath(self.root_dir)


def clean_temp_files(config: CleanTempFilesConfig):
    """
    Clean temporary files generated by LaTeX in the specified directory.

    Args:
        config (CleanTempFilesConfig): Configuration object containing the root directory and file options.
    """
    root_dir = config.root_dir
    all_file = config.all_file
    # Common temporary file extensions generated by LaTeX
    temp_extensions = [
        ".aux",
        ".bbl",
        ".blg",
        ".brf",
        ".idx",
        ".ilg",
        ".ind",
        ".lof",
        ".log",
        ".lot",
        ".out",
        ".toc",
        ".acn",
        ".acr",
        ".alg",
        ".glg",
        ".glo",
        ".gls",
        ".ist",
        ".fls",
        ".fdb_latexmk",
        ".synctex.gz",
        ".tdo",
    ]
    if all_file:
        temp_extensions.append(".pdf")

    deleted = 0
    for dirpath, _, filenames in os.walk(root_dir):
        for filename in filenames:
            if any(filename.endswith(ext) for ext in temp_extensions):
                file_path = os.path.join(dirpath, filename)
                try:
                    os.remove(file_path)
                    print(f"Deleted: {file_path}")
                    deleted += 1
                except Exception as e:
                    print(f"Could not delete {file_path}: {e}")
    print(f"Total temporary files deleted: {deleted}")
